{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;\red117\green113\blue92;
\red246\green246\blue239;\red244\green0\blue95;\red152\green224\blue36;\red88\green209\blue235;\red157\green101\blue255;
\red224\green213\blue97;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgray\c0\c0;\cssrgb\c53333\c51765\c43529;
\cssrgb\c97255\c97255\c94902;\cssrgb\c97647\c14902\c44706;\cssrgb\c65098\c88627\c18039;\cssrgb\c40000\c85098\c93725;\cssrgb\c68235\c50588\c100000;
\cssrgb\c90196\c85882\c45490;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 # given a string like aaabbccc return 3b2b3c \strokec5 \
\
\strokec6 function\strokec5  \strokec7 encode\strokec5 (str\strokec6 ::
\f1\i \strokec8 String
\f0\i0 \strokec5 )\
    counter \strokec6 =\strokec5  \strokec9 1\strokec5 \
    prevLetter \strokec6 =\strokec5  str[\strokec9 1\strokec5 ]\
    returnString \strokec6 =\strokec5  \strokec10 ""\strokec5 \
    \
    \strokec6 for\strokec5  n \strokec6 in\strokec5  \strokec9 2\strokec6 :\strokec8 length\strokec5 (str)\
        \strokec6 if\strokec5  prevLetter \strokec6 ==\strokec5  str[n]\
            counter \strokec6 +=\strokec5  \strokec9 1\strokec5 \
        \strokec6 else\strokec5  \
            returnString \strokec6 =\strokec5  returnString\strokec6 *\strokec8 string\strokec5 (counter)\strokec6 *\strokec5  prevLetter\
            counter \strokec6 =\strokec5  \strokec9 1\strokec5 \
            prevLetter \strokec6 =\strokec5  str[n]\
        \strokec6 end\strokec5 \
    \strokec6 end\strokec5 \
    returnString \strokec6 =\strokec5  returnString\strokec6 *\strokec8 string\strokec5 (counter)\strokec6 *\strokec5 prevLetter\
    \strokec6 return\strokec5  returnString\
\strokec6 end\strokec5 \
\
\strokec6 function\strokec5  \strokec7 decode\strokec5 (str\strokec6 ::
\f1\i \strokec8 String
\f0\i0 \strokec5 )\
    returnString \strokec6 =\strokec5  \strokec10 ""\strokec5 \
    \strokec6 for\strokec5  n \strokec6 in\strokec5  \strokec9 1\strokec6 :\strokec9 2\strokec6 :\strokec8 length\strokec5 (str)\
        \strokec6 for\strokec5  m \strokec6 in\strokec5  \strokec9 1\strokec6 :\strokec8 parse\strokec5 (Int,str[n])\
            returnString \strokec6 =\strokec5  returnString\strokec6 *\strokec5 str[n\strokec6 +\strokec9 1\strokec5 ]\
        \strokec6 end\strokec5 \
    \strokec6 end\strokec5 \
    \strokec6 return\strokec5  returnString\
\strokec6 end\strokec5 \
}